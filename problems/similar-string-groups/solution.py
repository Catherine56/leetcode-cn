import time
from typing import List
from collections import defaultdict


class Solution:
    def __init__(self):
        self.similarDict = defaultdict(set)

    def numSimilarGroups(self, A: List[str]) -> int:
        """Returns the count of similar string groups."""
        words = set(A)
        self.buildSimilarDict(A, len(A), len(A[0]))

        groupCount = 0
        while words:
            groupWords = set()
            bfsQueue = [words.pop()]
            while bfsQueue:
                curWord = bfsQueue[0]
                similarWords = self.similarDict[curWord].intersection(words)
                if similarWords:
                    bfsQueue.extend(similarWords)
                    words = words - similarWords
                # basic BFS operation
                groupWords.add(curWord)
                bfsQueue.remove(curWord)
            if groupWords:
                # print(groupWords)
                groupCount += 1
        return groupCount

    def buildSimilarDict(self, words: set, wordsCount:int, wordLen:int):
        print(f"WordsCount={wordsCount}, WordLen={wordLen}")
        if wordsCount > wordLen * 2:
            print('Choose all possible swap method.')
            findSimilarWords = self.findSimilarWordsA   # O(N * W^2)
        else:
            print('Choose traverse words method.')
            findSimilarWords = self.findSimilarWordsB   # O(N^2 * W)
        
        for word in words:
            # similarDict: size(len(words), len(word))
            self.similarDict[word] = findSimilarWords(word, words)

    def findSimilarWordsA(self, word: str, words: set) -> set:
        """
        Return all similar words of a word. 
        All possible swaps. O(W^2)
        """
        similarWords = set()
        for i in range(len(word)):
            similarWordsOfI = set([word[:i] + word[j] + word[i + 1:j] + word[i] + word[j + 1:] for j in range(i + 1, len(word))])  # replace i, j
            similarWords = similarWords.union(similarWordsOfI)
        similarWords.intersection_update(words)
        return similarWords

    def findSimilarWordsB(self, curWord: str, words: set) -> set:
        """
        Return all similar words of a word. 
        All similar in words. O(NW)
        """
        similarWords = set([word for word in words if self.isSimilar(curWord, word)])
        return similarWords

    def isSimilar(self, wordA, wordB):
        """Returns if two words is similar(2 chars swapped). O(W)"""
        if len(wordA) != len(wordB):
            return False

        diffChars = [[wordA[i], wordB[i]] for i in range(len(wordA)) if wordA[i] != wordB[i]]
        if len(diffChars) == 2 and diffChars[0][0] == diffChars[1][1] and diffChars[0][1] == diffChars[1][0]:
            return True
        return False


if __name__ == "__main__":
    # A = ["tars", "rats", "arts", "star"]
    A = ["tbacalnhottvtbrnsiodffikrfekhectvtgtapqdltwzaxghxdjncyxlckdascercgegohruotsnhokukojpzzvrcnurdafnggcuqeydguzucuzuqcxzoudzltnpcynbbkmttjilwpadisinopngqbpeisyavtqacgivcuhurivjkcaqbgyuicfulppxivqnifaxcijlqhijhhlgwlcartliusopufwjswhpokjwvyhpwmlzyrsxmgdfdo","fqpvpbkgpcoflhvgeslttxgpdihywolrdtvrevafrttaxuvointrtxbdlzifuzmaicpcuiuyloozcsclquguwanqgnrntkltpuhegkhlchucdipoyeauyxbxxkhwqhxenhwycojndjtunuuauasjtvaqrrthnpljjcficwcekpgzacqicyjsuadzfojslcqsjdivkcdpzrifhibmacqkywpztgndmanoosgbinzvolsrtuhwibigggkcdf","piegcnpuugamtsbttnischujtdicgoiyydsmbkilwsxuvadoxuvtwtbfhkqpkacoufuraorbdvjhjvgdhjzydqyalgqvspwzlqkfropcnhvzccehhcfrkqprllxdtxvezxzilaartwanowwstsrucsdgpaplhlukutucfxcyxtntmjgedlogulazucprnvtaqduoowjpuzatgknkcfgenhhiilenjibfcpbziyrcfqogncchngioyjiiiq","lpbcsuullldxawoqripkcrgjtyazcidnyxcionrnratronruvayngztexpinczlvmfctguuygiqcyublzndjflackcioiozuoubrvnuknunjzcpstwdnuetfgxaamhiatqheikhdjgefbzlegpahsflcidrgtroqgwsuqpyoidpeivvkddqfgykioaihdscbthvcosjklhhxbkcwjupoagqtjutwccxtphzvpmfwptlgvscuashwqfxtjh","ohuhujlnudarscwpnyeuwhdtvruynfqztzuksdzoqkulbvdcpijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfndrnrlocjgidpaihcokahlwptxioijtgidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","pieglntuugamtsbttnischujtdisgoiyydsmbkilwsxuvadoxuvtwpbfhkqpkacoufuraorbpvjhjvgdhjzydqyalgqvspwzlqkfropcnhvzccehhcfrkqprllxdtxvezxzilaartwanowwctsrucsdgpaplhlukutucfxcyxtntmjgedlogulazucprnvtaqduoowjpuzatgknkcfgenhhiicenjibfcdbziyrcfqogncchngioyjiiiq","hweptoclkcqrgxucfpaskhkpqhiegdfvruxsawwydunaqbuohmdauzncjeputlozomtpttplgzjcwgitepiryvkncdhkqyanlijquvubvmgsbtbtyyxnsaswlkrdcafouxizajhwglcoadwgzfhacoofhxstapcnggtnozqirultlbdouoifxcrdxcviyphbfsptniusiufckcgnzejcjndivtecipvgygjcihzlqrkdiatqvlnurhurlj","muqepdxufotxbjlgczqyuiuochkeuplktwsikozpigauffhfopowbrsagipurbstuegdahogzyenldsjxcjgjvczjrvziaaqkmngdiscpfcaclnaujcjptairpwalatsqqvwsztifhcuuadwtbonghsiaultnqcryvungitiokcbcfyvfkklnyltyhnixudnqugpllgmoittxrhnhrztdhryclvdpxbjddcoewcgrtwqvczpeovxnkihhc","lbeodsdkxconcffnrzaugtkwkftvoazdwqheafxuuucheadofiplvkhdznsxujslquibxzglqcchjgjgwuhardunaezccwultypjccgpypnaobognostbgauziczpizgtrwuniocpdyijebxtvfkvrphqkjflkclaxvusrixqgyvlmitqcgsjcgrwhhostluyahynpifpvmtsdidcwgiptbyhkrcrqditjulacvhtenlpqonmtoitaunri","ohuhujlnudarsccpnyeuwhdtvruynfqztzuksdzoqkulbvdcpijffcutuxgrabyuozqguuxzejcgdcllkeasfwcxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfndrnrlocjgidpaihcokahlwptxioijtgidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","ohuhuvltueprscwpnydudhdtcruynfqztzuksdzoqkulbvdcaijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgtvcmtebsxygkeibwgbulkitndjjqgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijngidioftyuonhvqlapbpksahavzdhnvenahxvqpaskpmnacacghfiitrlt","gdyugxyutyngfoxoqmhsactorikxgkcqkgvihncvmizfdhsngnfsqbcwahczjyjruurpcrjnilpvchiyitzqarutcojlevlruajuzucbmwsblqcvcakekhdarcjnuocsrqxocytghcedtalpuepuipdvwzoiopailnpfalxsdlftkgfwrtehihebapyuutbwtpculniztwvddgzdftzwqgicvtaxjknglphnxbdoaojilpuikfnoqssght","btzboojecwhddiaaoubgutyphpnsyjipcjaihtjwmuhifuwtkyqtjutqckccfxdkorllfpzozavpjocmrruentcoihhdrcchedlnnfudiiqaiktunywvvmlaxsfyzggpycloinbqkzcgdgqsvghibtardnpopxurqxniellddkafchtavxthxtkzaarbkcstghozvisviowuqwiplungwsjgsnagqllyxfccezcfjcvpgulugpuesrrntu","tbacalnhottvtbrnsiodffikrfekhectvtgtapqdltwzaxghxdjncyxlckdascercgegohruotsnhokukojpzzvrcnurdafnggcuqeydguzucuzuqcxzoudzltnpcynbbkmtujilwpadisinopngqbpeisyavtqacgivcuhurivjkcaqbgyuicfulppxivqnifaxcijlqhijhhlgwlcartliusoptfwjswhpokjwvyhpwmlzyrsxmgdfdo","dpcrvijrppoclysdglepuapottyjagaqavjwjuzlfechvishpcdlfibilgkizurpzglkajmhrrttkjiyaathhvihxegfujnkdutjiiliccywgtcnssniqwvkofwazcgzurnocscvovpqvcpwggsrqodrnxnfkubwyudglaeocqgbugceqxmcsmhukdihutsnbduocqlaiztoxhnaixcuozkltrfbzdhflyhontfpqwcttdneyutxapunbx","dcknoiuqethhliygzksbcozrepakaqlrguzaulovkekqmrcuvsotliytqvisoopvpgnunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcxnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylctdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhndajpbouiigqtaxclg","lpbcsuullldxapoqripkcrgjtyazcidnyxcionrnratronruvayngztexpinczlvmfctguuygiqcyublzndjflackcioiozuoubrvnuknunjzcpstwdnuetfgxaamhiatqheikhdjgefbzlegpahsflcidrgtroqgwsuqpyoidpeivvkddqfgykioaihdscbthvcosjklhhxbkcwjupoagqtjutwccxtwhzvpmfwptlgvscuashwqfxtjh","pieglnpuugamtsbttnischujtdicgoiyydsmbkilwsxuvadoxuvtwtbfhkqpkacoufuraorbpvjhjvgdhjzydqyalgqvspwzlqkfropcnhvzccehhcfrkqprllxdtxvezxzilaartwanowwstsrucsdgpaplhlukutucfxcyxtntmjgedlogulazucprnvtaqduoowjpuzatgknkcfgenhhiicenjibfcdbziyrcfqogncchngioyjiiiq","tbacalnhottvtbrnsiodffikrfekhectvtgtapqdltwzaxghxdjncyxlckdascercgegohruotsnhokukojpzzvrcnurdafnggcuqeydguzucuzuqcxzoudzltnpcynbbkmttjilwpagisinopndqbpeisyavtqacgivcuhurivjkcaqbgyuicfulppxivqnifaxcijlqhijhhlgwlcartliusopufwjswhpokjwvyhpwmlzyrsxmgdfdo","fdpvpbkgpcoflhvgeslttxgpdihywolrdtvrevafrttsxuvointrtxbdlzifuzmaicpcuiuyloozcsclquguwanqgnrntkltpuhegkhlchucdipoyeauyxbxxkhwqhxenhwycojndjtunuuauaajtvaqrrthnpljjcficwcekpgzacqicyjsuadzfojslcqsjdivkcdpzrifhibmacqkywpztgnqmanoosgbinzvolsrtuhwibigggkcdf","dckngiuqethhiiygzksbcozrepakaqlrguzaulovkekqmrcuvsotllctqvisoopvponunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcnnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylytdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhxdajpbouiigqtaxclg","muqepdxufotxbjlgczqyuiuochkeuplrtwsikozpigauffhfopowbrsagipurbstuegdahogzyenldsjxcjgjvczjrvziaaqkmngdiscpfcaclnaujcjptairpwalatsqqvwsztifhcuuadwtbonghsiaultnqcryvungitiokcbcfyvfkklnyltyhnixudnqugpllgmoittxkhnhrztdhryclvdpxbjddcoewcgrtwqvczpeovxnkihhc","ftywecuxtrfnizfpjrkpxnciactghhqkyrhhgcdezgutckmdstcgfeflawozwuuepwsinasvxmbuswisvikxduiylsznpqgcplouqcrogqiaoccldldllfuzbyvkwtajpaijrdzregmjuzadtdqbnlpdovloqpxyojhgouceicigudtoiuatiivnppaghtalqqacatvuusrxtzgyotoubihntfhjnhxkjchrfsgrbwcnykchknpnvbjclv","oavstzqrhkvhvuiusgahnnlijqcgnrcbfbocrwllhzottnxvbrsgxjjntksljcinxoeptxhpyuhogqtabsqwcpdvyktqkuqlhygyhxudocldthtloucdyzfdvawduawzaeuvopfozkzginqfncuplfcxafapyrbvtjxdzscdisuucmpwggkemomciezaiqrurnshwfukuwtciljreildrjonyatbjacigidpnpitgcipitfcggpeakuclh","gtprewhncecrpvlclwcyjhnauzhmrnwmdfinnehrfaqajxdbvgcgltpgahssgsvggqgtoznngkwukcardxicbsxujubcttneilibqycfpcfavdpczauirjitzdeplichuayscxuuaxusqaqlptuzmlxnohojujldttgfjuhtkvkcsiospxopzcuqafdyklaklryzqhrtvootwdkbotdwidihlgbkieguooicpnzvtyjyoncqffuhrviiwp","wxtvtcbiujutvimsnaekkoccfgrswzmvxlosjnaxtdiynmewpgwddqcifcfvpitxfgktynehufdaypbfnhwgocpirtbjopqtprdpriayvhjqcrztrcskaogfteajzdxnccthpuusfozubudguhqzztxurllpkgwioaknksyyagbjupvbdeughvashuqllngkudzwcgoivluarlihpcnlnoejyrqcahiiolzjituchlcgltcxndsqoicahq","ohuhuvltueprscwpnydudhdtcruynfqztzuksdzoqkulbvdcaijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsilfppyctqocrucrsmhcgtvcmtebsxygkeibwgbulkitndjjqgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijngidioftyuonhvqwapbpksahavzdhnvenahxvqpaskpmnacacghfiitrlt","ohuhuvltueprscwpnydudhdtcruynfqztzuksdzoqkulbvdcaijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijngidioftyuonhvqlapbpksahavzdhnvenahxvqpaskpmnacacghfiitrlt","dcknoiuqethhliygzkscuozrepakaqlrguzaclovkekqmrcuvsotliytqvisoopvpgnunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcxnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylctdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhndajpbouiigqtaxblg","wxtvtcbiujutvimsnaekkoccfgrswzmvxlosjnaxtdiynmewpgwddqsifcfvpitxfgktynehufdaypbfnhwgocpirtbjopqtprdpriayvhjqcrztrcskaogfteajzdxnccthpuusfozubudguhqzztxurllpkgwioaknkcyyagbjupvbdeughvashuqllngkudzwcgoivluarlihpcnlnoejyrqcahiiolzjituchlcgltcxndsqoicahq","yaeismatggfjodlnixhhahtjfobsitcgqdliquhwhukyqwtuujlcjihnvnuidsftxvgvjphsnntpsyucyoocdidnsmcrtxcgfjpbhnjeiivwzyttxznahqxbzoryrgxpjaifaclkigwlkoagbgcpasrrfwvuapckckunvmdneditrbrlxkqdibetlvztgqzezrculhcplcwrotlgquouladucouopauakifncyqugctekwofzhpvdcpzps","oaprkciptaeukcdukgymicqnoupbrnhxilqxzfxlyazjthnucdtyaettcdjcmuulghvjuhoctbllssoblhzrigbgexzfpcivhipfkwunoopkaaprjsftdignctyaogukgklnqwnunwiryrijtdggsbazfcpurcwaoidfgvzaohsilpdnclspyaflcpwunvacbvujhuqjtdvutrkoxevirxgqxvgtjezchscthowdhtqwqifeqznlmydsic","muqepdxufotxbjlgczqyuiuochkeuplktwsikozpigauffhfopowbrsagipurbstuegdahogzyenldsjxcjgjvczrrvziaaqkmngdiscpfcaclnaujcjptairpwalatsqqvwsztifhcuuadwtbonghsiaultnqcjyvungitiokcbcfyvfkklnyltyhnixudnqugpllgmoittxrhnhrztdhryclvdpxbjddcoewcgrtwqvczpeovxnkihhc","dcknoiuqethhliygzksbuozrepakaqlrguzaclovkekqmrcuvsotliytqvisoopvpgnunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcxnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylctdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhndajpbouiigqtaxclg","oaprkciptaeukcduknymicqnoupbrnhxilqxzfxlyazjthnucdtyaettcdjcmuulghvjuhoctbllssoblhzrigbgexzfpcivhipfkwcnoopkaaprjsftdignctyaogukgklnqwgunwiryrijtdggsbazfcpurcwaoidfgvzaohsilpdnclspyaflcpwunvacbvujhuqjtdvutrkoxevirxgqxvgtjezuhscthowdhtqwqifeqznlmydsic","oaprkciptaeukcdukgymicqnoupbrnhxilqxzfxlyazjthnucdtyaettcdjcmuulghvjuhoctbllssoblhzrigbgexzfpcivhipfkwcnoopkaaprjsftdignctyaogukgklnqwnunwiryrijtdggsbazfcpurcwaoidfgvzaohsilpdnclspyaflcpwunvacbvujhuqjtdvutrkoxevirxgqxvgtjezuhscthowdhtqwqifeqznlmydsic","yaeismatggfjodlnixhhahtjfobsitcgqdliquhwhukyqwtuujlcjihnvnuidsftxvgvjphsnntpsyucyoocdidnsmgrtxcgfjpbhnjeiivwzyttxznahqxbzoryrgxpjaifaclkigwlkoacbgcpasrrfgvuapckckunvmdneditrbrlxkqdibetlvztwqzezrculhcplcwrotlgquouladucouopauakifncyqugctekwofzhpvdcpzps","piegcnpuugamtsbttnischujtdicgoiyydsmbkilwsxuvadoxuvtwtbfhkqpkacoufuraorbpvjhjvgdhjzydqyalgqvspwzlqkfropcnhvzccehhcfrkqprllxdtxvezxzilaartwanowwstsrucsdgpaplhlukutucfxcyxtntmjgedlogulazucprnvtaqduoowjpuzatgknkcfgenhhiilenjibfcdbziyrcfqogncchngioyjiiiq","pieglnpuugamtsbttnischujtdisgoiyydsmbkilwsxuvadoxuvtwtbfhkqpkacoufuraorbpvjhjvgdhjzydqyalgqvspwzlqkfropcnhvzccehhcfrkqprllxdtxvezxzilaartwanowwctsrucsdgpaplhlukutucfxcyxtntmjgedlogulazucprnvtaqduoowjpuzatgknkcfgenhhiicenjibfcdbziyrcfqogncchngioyjiiiq","gaihkualquoklrjzbulikdcizytpxehlipritnjmxnguhucdpofqngcsrfwutzxupctvgqnhclaqvvhkbpzpzddotwgucajogpizyifccbtdoxtishulnfgbrrufalkdiqofjavthsndcaljqzrywkpuunteaxihnuegqgzntrwhjnaiplgyicxcwltschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","sngdyclixiaumvnohwhiacwzeiqupqgysioblaoljnbthciecqctzxczoitbsorxplxsuaojruncyfrqrllccaaizzcotjgddghbpqgqpuehvtjjpuanihyupdctdkshlikhothlwiigztwklfcrcfngzluucvfitphctvdaojngtheacfualqwnmgftddbrpabedvzgmvtvftjnuuypgsqgukkyasdwixerpnyruscxkofnjxvkupwrko","gaihkualqloklrjzbilikdcigytpxehlipritnjmxnguhucdpofqngcsrfwutzxupcpvgqnhclaqvvhkbpzpzddgtwzucajagpizyifccbtdoxtushulnfobrrufolkdiqofjavthsndcaljqzrywktuunteaxihnuegqgzntrwhjnaiplgyicxcwutschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","fqpvpbkgpcoflhvgeslttxgpdihywolrdtvrevafrttsxuvointrtxbdlzifuzmaicpcuiuyloozcsclquguwanqgnrntkltpuhegkhlchucdipoyeauyxbxxkhwqhxenhwycojndjtunuuauaajtvaqrrthnpljjcficwcekpgzacqicyjsuadzfojslcqsjdivkcdpzrifhibmacqkywpztgndmanoosgbinzvolsrtuhwibigggkcdf","dmecpakzfarpgcoxfkcruegwtjwytgtzchqhsuikxorngenqvawfodsiefrxokqpqhabtopwuvfcndqtvpibijniclohtowrggnsptvyhnucauqdktqcxouergfasvpcnhidtbhvidbbjaytlzkcnxydeduuspuasiigxzijuisjzulzpkhcccbdyfwugtqldlxialoctvmhnhcptmsknutrljacwlgyrvfllgpunljojaozgiyzrciauh","wxcvtcbiujutvimsnaekkoccfgrswzmvxlosjnaxtdiynmewpgwddqsifcfvpitxfgktynehufdaypbfnhwgocpirtbjopqtprdpriayvhjqcrztrcskaogfteajzdxnctthpuusfozubudguhqzztxurllpkgwioaknkcyyagbjupvbdeughvashuqllngkudzwcgoivluarlihpcnlnoejyrqcahiiolzjituchlcgltcxndsqoicahq","dcknoiuqethhliygzksbcozrepakaqlrguzaulovkekqmrcuvsotliytqvisoopvpgnunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcnnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylctdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhxdajpbouiigqtaxclg","dpcrvijrppoclysdglepuapottyjagaqavjwjuzlfechvishpcdlfibilgkizurpzglkajmhrrttkjiyaathhvihxegfujnkdutjiiliccywgtcnssniqwvkofwazcgzurnocscvovpqvcpwggsrqodrnxnfkubwyudglaeocqgbugceqxmcsmhukdihbtsnbduocqlaiztoxhnaixcuozkltrfuzdhflyhontfpqwcttdneyutxapunbx","gaihkualquoklrjzbulikdcizytpxehlipritnjmxnguhucdpofqngcsrfwutzxupcpvgqnhclaqvvhkbpzpzddotwgucajogpizyifccbtdoxtishulnfgbrrufalkdiqofjavthsndcaljqzrywktuunteaxihnuegqgzntrwhjnaiplgyicxcwltschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","hweptoclkcqrgxucfpaskhktqhiegdfvruxsawwydunaqbuohmdauzncjeputlozomtpttplgzjcwgitepiryvkncdhkqyanlijquvubvmgsbtbtyyxnsaswlkrdcafouxizajhwglcoadwgzfhacoofhxspapcnggtnozqirultlbdouoifxcrdxcviyphbfsptniusiufckcgnzejcjndivtecipvgygjcihzlqrkdiatqvlnurhurlj","gaihkualquoklrjzbulikdcizytpxehlipritnjmxnguhucdpofqngcsrfwutzxupcpvgqnhclaqvvhkbpzpzddotwgucajagpizyifccbtdoxtishulnfgbrrufolkdiqofjavthsndcaljqzrywktuunteaxihnuegqgzntrwhjnaiplgyicxcwltschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","psgppujtcijdechdaxonuhmcgocuxxzboduxurlhaomjyzbicctnitlnjupicqgsuvcfhckabogylkvaoyippiosaavopdcdfyofvbtkwicvxhzsbihafkwejczscdtiftkjnqsuqjvaururofykwhcjfdmiepdfcxntspwzrqtrltggswelhnhbcldurezlapygwhgthwcqapqnviyluezttqnkquttiuargxgnlinnvdklrruiggozla","dcknoiuqethhliygzkscuozrepakaqlrguzaclovkekqmrcuvsotliytqvisoopvpgnunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcxnrtcnivcafaggobtrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylctdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhndajpaouiigqtaxblg","dcknoiuqethhliygzksbcozrepakaqlrguzaulovkekqmrcuvsotlictqvisoopvpgnunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcnnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylytdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhxdajpbouiigqtaxclg","muqepdxufotxbjlgczqyuiuochkeuplktwsikozpigauffhfopowbrsagipurbstuegdahogzyenldsjxcjgjvczrrvziaaqkmngdiscpfcaclnaujcjptairpwalatsqqvwsztcfhcuuadwtbonghsiaultnqcjyvungitiokcbcfyvfkklnyltyhnixudnqugpllgmoittxrhnhrztdhryclvdpxbjddcoewcgrtwqvizpeovxnkihhc","dckngiuqethhliygzksbcozrepakaqlrguzaulovkekqmrcuvsotlictqvisoopvponunjjmevjdowsfcuhrjgdxdsldxrqwhplaygaitgqxtcnnrtcnivcafaggoatrhusajiubtgzkcchndfnfsxchlzptiiyzeeocwwyffylytdjnrlmphpvqwsbvnxdikudtutbfucupjgacltihkiczpowzbucfrpnhwyuhxdajpbouiigqtaxclg","icipsjupktdgwhgguzyknfiutbxdslcxffitkfeocvravcouqvdwlxditatmzhczoenvtzishpihxlqrvzllqlpsgnnrbtcuqxtwhwuqyecroojhpddlglcanurnznskklhpcyilaptrnsmghlaipcjzyyxpaidfdguukfcmccgworcabjthowawrhupivsvptauqickoyatecfctbtoribhkgujnegbdnusxfoeuaduiagyjvngqqozjj","fapvpbkgpcoflhvgeslttxgpdihywolrdtvrevafrttsxuvointrtxbdlzifuzmdicpcuiuyloozcsclquguwanqgnrntkltpuhegkhlchucdipoyeauyxbxxkhwqhxenhwycojndjtunuuauaajtvaqrrthnpljjcficwcekpgzacqicyjsuadzfojslcqsjdivkcdpzrifhibmacqkywpztgnqmanoosgbinzvolsrtuhwibigggkcdf","oaprkciptaeukcduknymicqnoupbrnhxilqxzfxlyazjthnucdtyaettcdjcmuulghvjuhoctbllssoblhzrigbgexzfpcivhipfkwcnoopkaaprjsftdignwtyaogukgklnqwgunwiryrijtdggsbazfcpurcwaoidfgvzaohsilpdnclspyaflcpwunvacbvujhuqjtdvutrkoxevirxgqxvgtjezuhscthowdhtqcqifeqznlmydsic","aufiuuwvaivegtqoqxztrgzztfxyjgjpzkfvblgcspxjiikyoiswopdcgzuqhduoxeniqxkpaistuvrygtnhplkadjrguretuczqesamutackqiicoadnrnlcccuaddtwlrnrgoatqmvorhlehfjstmnixialgczcychdotiialktuughcpckuelwvtbcjhguwcqghpcrlzypfdhykpobhbjpnsfwoiwdlnbshtdlunafscbjvpynvfonx","fapvpbkgpcoflhvgeslttxgpdihywolrdtvrevafrttsxulointrtxbdlzifuzmdicpcuiuyloozcsclquguwanqgnrntkltpuhegkhlchucdipoyeauyxbxxkhwqhxenhwycojndjtunuuauaajtvaqrrthnpljjcficwcekpgzacqicyjsuadzfojsvcqsjdivkcdpzrifhibmacqkywpztgnqmanoosgbinzvolsrtuhwibigggkcdf","ohuhuvltudprscwpnyeudhdtcruynfqztzuksdzoqkulbvdcaijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijngidioftyuonhvqlapbpksahavzdhnvenahxvqpaskpmnacacghfiitrlt","lbeodsdkxctncffnrzaugtkwkftvoazdwqheafxuuucheadofiplvkhdznsxujslquibxzglqcchjgjgwuhardunaezccwultypjccgpypnaobognostbgauziczpizgtrwuniocpdyijebxtvfkvrphqkjflkclaxvusrixqgyvlmitqcgsjcgrwhhostluyahynpifpvmtsdidcwgiptbyhkrcrqditjulacvhoenlpqonmtoitaunri","bhnxydoglmtehlpjfiojkkrcpsdcsthonlvugkhjvwsazkgpfapuuzyoshznnitittfnrfqdotifgdosxiufdecuotctopkqxjrxcuibqnairjjauapciaupfackscnbnwvtptxohlizqyeavepmdlwalucmgvquhtwdgynxgcuwwyginjieuhqhyzcuazdacpeprrcyklatxdshiigrvzrbcdnftrgtqccgizwolqulsolbkvjvulhbcg","gaihkualquoklrjzbilikdcizytpxehlipritnjmxnguhucdpofqngcsrfwutzxupcpvgqnhclaqvvhkbpzpzddgtwgucajagpizyifccbtdoxtushulnfobrrufolkdiqofjavthsndcaljqzrywktuunteaxihnuegqgzntrwhjnaiplgyicxcwltschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","ohuhuclnudarscwpnyeuwhdtvruynfqztzuksdzoqkulbvdcpijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfndrnrlojjgidpaihcokahlwptxioijtgidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","cbsztuvqgeqexvzwidzcfweglwkvongrqvgpnrkufrsnehgawcpzoxhjfpljhrftuabdsccthukpynichngyncoioliiqlzntuhvbvdkuyamwotfilpsiefxniolxhnypdxzcglvhcrqqylciosgfptpagyssgjdukbavclwacuwtrucudtualomcqhpoqiajitanauturjkpemabtdstpzlcnxicxdzodthogukigykjitrfhjdajrubc","ohuhuvltudarscwpnyeudhdtcruynfqztzuksdzoqkulbvdcpijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijngidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","ohuhuvltudprscwpnyeudhdtcruynfqztzuksdzoqkulbvdcaijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijngidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","gaihkualqloklrjzbilikdcizytpxehlipritnjmxnguhucdpofqngcsrfwutzxupcpvgqnhclaqvvhkbpzpzddgtwgucajagpizyifccbtdoxtushulnfobrrufolkdiqofjavthsndcaljqzrywktuunteaxihnuegqgzntrwhjnaiplgyicxcwutschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","yaeismatggfjodlnixhhahtjfobsitcgqdliquhwhukyqwtuujlcjihnvnuidsftxvgvjphsnntpsyucyoocdidnsmcrtxcgfjpbhnjeiivwzyttxznahqxbzoryrgxpjaifaclkigwlkoagbgcpasrrfgvuapckckunvmdneditrbrlxkqdibetlvztwqzezrculhcplcwrotlgquouladucouopauakifncyqugctekwofzhpvdcpzps","outntyypsafzuiwtevolaidxqilsciihueeajnxkrlakvgnowoevpjgodoicpbtnyauzcjfcgkovbwopuqendhcqfzbrtmxyyarpgkwfsvuiikvldatfryhupnultguibgjfgnrzirsphahisdtndmizqijqrqgvysloctcdfqscgpuczlbdrccsmhnxkwutttxpwhhdtcgkzczxqdcjpnlegujhocuarhualxfvoibucgakhnwjptclla","ohuhuvlnudarscwpnyeudhdtcruynfqztzuksdzoqkulbvdcpijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfnwrnrlojjgidpaihcokahlwptxioijtgidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","gaihkualquoklrjzbilikdcizytpxehlipritnjmxnguhucdpofqngcsrfwutzxupcpvgqnhclaqvvhkbpzpzddotwgucajagpizyifccbtdoxtushulnfgbrrufolkdiqofjavthsndcaljqzrywktuunteaxihnuegqgzntrwhjnaiplgyicxcwltschcsofvojggvmsesidydutpcovnockelawbotmihreqbdfwytxsurajapkycvc","ohuhuvlnudarscwpnyeuwhdtcruynfqztzuksdzoqkulbvdcpijffcutuxgrabyuozqguuxzejcgdcllkeasfccxiwsiwfppyctqocrucrsmhcgqvcmtebsxygkeibwgbulkitndjjtgzjpwgxcqollnvtrozygitfndrnrlojjgidpaihcokahlwptxioijtgidioftyuonhvalapbpksahavzdhnvenahxvqpqskpmnacacghfiitrlt","lbeodsdkxconcffnrzaugtkwkftvoazrwqheafxuuucheadofiplvkhdznsxujslquibxzglqcchjgjgwuhardunaezccwultypjccgpypnaobognostbgauziczpizgtrwuniocpdyijebxtvfkvrphqkjflkclaxvusrixqgyvlmitqcgsjcgrwhhostluyahynpifpvmtsdidcwgiptbyhkrcrqditjulacvhtenlpqonmtoitaundi","psgppujtcijrechdaxonuhmcgocuxxzboduxurlhaomjyzbicctnitlnjupicqgsuvcfhckabogylkvaoyippiosaavopdcdfyofvbtkwicvxhzsbihafkwejczscdtiftkjnqsuqjvaururofykwhcjfdmiepdfcxntspwzdqtrltggswelhnhbcldurezlapygwhgthwcqapqnviyluezttqnkquttiuargxgnlinnvdklrruiggozla","yaeismatggfjodlnixhhahtjfobsitcgqdliquhwhukyqwtuujlcjihnvnuidsftxvgvjphsnntpsyucyoocdidnsmgrtxcgfjpbhnjeiivwzyttxznahqxbzoryrgxpjaifaclkigwlkoacbgcpasrrfgvuapckckunvmdneditrbrlxkqdibetlvztwqzezrculhcplcwrotlgquouladucouopafakiuncyqugctekwofzhpvdcpzps","jihbbxgztuvliyuckukufaesgdthgfnpdvcuqwbuteiztcwgqhihorierqnahnlztqnftdcnmifoukorcnuyusipvhcopnbvxinnuawowcxrgacpcvujclmldjcdolpukhpcaotmaoeggazyccblnwpzygcwlpguoxartylipwstxgdslfruqyjitjexncdrhotflfrjaqkzgtcfusjvvhpzsqixegbdsiaaioidjyqkvzthrlptkahsdk","bhnxydoglmtehlpjfiojkkrcpsdcsthonlvugkhjvwsazkgpfapuuzyoshznnitittfnrfqdotifgdosxiufdecuotctopkqxjrxcuibqnairjjauapciaupfackscnbnwvtptxohlizqyeavepmdlwalucmgvquhtwdgynxgcuwwyginjieuhqhyzcuazdacpenrrcyklatxdshiigrvzrbcdpftrgtqccgizwolqulsolbkvjvulhbcg","qtiiknwnhfzfouoopbvnpezueualdiondutikwwnofcrktxzocyladlnhshbahhumcigpfkhiagdkllaofputtndtiuhaghwrqjqjonygoijdcujzjrzdpccxiqvjxetubwuguahtkvccmjazjppyufxssarsgrmzgwukedggrpvqpfkipiycgcvxoulpalxyccvtttsesqcitwrlanbczdllrngtgiulxshsvtoncqyfcyabbcdiverhq"]

    tic = time.time()
    ret = Solution().numSimilarGroups(A)
    toc = time.time()

    print(f"Found {ret} similar groups in {toc-tic:.3f}s.")